<UserControl x:Class="Plainion.RI.InteractionRequests.RegionWithPopupWindowActionExtensionsView"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:pn="http://github.com/ronin4net/plainion"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <i:Interaction.Triggers>
        <pn:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
            <pn:PopupWindowAction pn:PopupWindowActionExtensions.RegionName="RegionWithPopupWindowActionExtensionsView" />
        </pn:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <GroupBox Header="View injection into PopupWindowAction (PopupWindowActionExtensions.RegionName)" BorderBrush="Black">
        <StackPanel Orientation="Vertical">
            <TextBlock TextWrapping="Wrap" Margin="5">
                <Run>
                    The AttachedProperty PopupWindowActionExtensions.RegionName is attached to the PopupWindowAction. This attached property 
                    acts as a shortcut and just creates a PopupWindowContentControl to the WindowContent and assigns the provided RegionName.
                </Run>
                <LineBreak/>
                <Run>
                    See also: "View injection into WindowContent (region on PopupWindowContentControl)".
                </Run>
            </TextBlock>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="Show confirmation" Command="{Binding ShowConfirmationCommand}" Margin="5" Padding="3"/>
                <TextBlock Grid.Column="1" Text="Response" Margin="5" VerticalAlignment="Center"/>
                <TextBox Grid.Column="2" IsReadOnly="True" Text="{Binding Model.JustMySampleState}" Margin="5"/>
            </Grid>
        </StackPanel>
    </GroupBox>
</UserControl>
